name: CI Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  backend-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: lgbt-game
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      SPRING_PROFILES_ACTIVE: test
      SPRING_FLYWAY_ENABLED: "false"  # Desabilita o Flyway GLOBALMENTE

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -uroot -proot --silent; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL to start... (attempt $i)"
            sleep 2
          done

      - name: Disable Flyway completely
        run: |
          cd Backend
          # Cria/Clear arquivo de propriedades de teste
          echo "# Configurações para TESTES (Flyway DESABILITADO)" > src/test/resources/application-test.properties
          echo "spring.flyway.enabled=false" >> src/test/resources/application-test.properties
          echo "spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration" >> src/test/resources/application-test.properties

      - name: Run tests
        run: |
          cd Backend
          mvn clean test -Dspring.profiles.active=test
          # Mostra logs se falhar
          cat target/surefire-reports/*.txt || true

  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd Frontend
          npm ci

      - name: Run frontend linting
        run: |
          cd Frontend
          npm run lint

      - name: Build frontend
        run: |
          cd Frontend
          npm run build